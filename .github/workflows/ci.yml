name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    name: Backend Tests & Lint
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules (backend)
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      - name: Install Backend Dependencies
        working-directory: backend
        run: npm ci

      - name: Run ESLint (backend)
        working-directory: backend
        run: npm run lint

      - name: Run Backend Tests
        working-directory: backend
        run: npm test

  frontend:
    name: Frontend Build & Lint
    runs-on: ubuntu-latest
    needs: backend

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules (frontend)
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install Frontend Dependencies
        working-directory: frontend
        run: npm ci

      - name: Run ESLint (frontend)
        working-directory: frontend
        run: npm run lint

      - name: Run Frontend Build
        working-directory: frontend
        run: npm run build
